controller:
  componentName: "jenkins-controller"
  image:
    registry: "docker.io"
    repository: "jenkins/jenkins"
    tag: 2.517-jdk21
    pullPolicy: "Always"

  admin:
    # -- Admin username created as a secret if `controller.admin.createSecret` is true
    username: "admin"
    # -- Admin password created as a secret if `controller.admin.createSecret` is true
    # @default -- <random password>
    password:

    # -- The key in the existing admin secret containing the username
    userKey: jenkins-admin-user
    # -- The key in the existing admin secret containing the password
    passwordKey: jenkins-admin-password

    # The default configuration uses this secret to configure an admin user
    # If you don't need that user or use a different security realm, then you can disable it
    # -- Create secret for admin user
    createSecret: true

    # -- The name of an existing secret containing the admin credentials
    existingSecret: ""

  jenkinsHome: "/var/jenkins_home"

  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "4096Mi"

  containerSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false

  serviceEnabled: true
  serviceType: NodePort
  nodePort: 32000
  
  healthProbes: false

  installPlugins:
    - kubernetes:4358.vcfd9c5a_0a_f51
    - workflow-aggregator:608.v67378e9d3db_1
    - git:5.7.0
    - configuration-as-code:1971.vf9280461ea_89
    - job-dsl:1.93
  installLatestPlugins: true

  JCasC:
    defaultConfig: true
    configScripts:
      jobs: |
        jobs:
          - script: >
              freeStyleJob('Hello-World') {
                description('Hello World job created via JCasC')
                steps {
                  shell('echo "Hello World from JCasC"')
                }
              }

    security:
      apiToken:
        creationOfLegacyTokenEnabled: false
        tokenGenerationOnCreationEnabled: false
        usageStatisticsEnabled: true

    securityRealm: |-
      local:
        allowsSignup: false
        enableCaptcha: false
        users:
        - id: "${chart-admin-username}"
          name: "Jenkins Admin"
          password: "${chart-admin-password}"

    # Ignored if authorizationStrategy is defined in controller.JCasC.configScripts
    # -- Jenkins Config as Code Authorization Strategy-section
    authorizationStrategy: |-
      loggedInUsersCanDoAnything:
        allowAnonymousRead: false

agent:
  enabled: true
  image:
    registry: "docker.io"
    repository: "jenkins/inbound-agent"
    tag: "3309.v27b_9314fd1a_4-7-jdk21"
  workingDir: "/home/jenkins/agent"
  resources:
    requests:
      cpu: "512m"
      memory: "512Mi"
    limits:
      cpu: "512m"
      memory: "512Mi"

additionalAgents:
  dind:
    podName: dind-agent
    customJenkinsLabels: dind
   # An example of overriding the jnlp container
   # sideContainerName: jnlp
    image:
      repository: jenkins/jnlp-agent-docker
      tag: latest
    envVars:
      - name: DOCKER_HOST
        value: "tcp://localhost:2376"
      - name: DOCKER_TLS_CERTDIR
        value: "/certs"
    alwaysPullImage: true
    volumes:
      - name: dind-certs
        type: HostPath
        hostPath: /home/jenkins/dind-certs
        mountPath: /certs
    yamlTemplate:  |-  
     spec: 
         containers:
           - name: dind-daemon 
             image: docker:28.3.2-dind-alpine3.22
             securityContext: 
               privileged: true
             env: 
               - name: DOCKER_TLS_CERTDIR
                 value: "/certs"
             volumeMounts:
               - name: dind-certs
                 mountPath: /certs
                 readOnly: true
  python:
    podName: python-agent
    customJenkinsLabels: python
    sideContainerName: python
    image:
      repository: jenkins/jnlp-agent-python3
      tag: "latest"

persistence:
  enabled: true
  existingClaim: jenkins-pv-claim
  storageClass: local-storage
  accessMode: "ReadWriteOnce"
  size: "10Gi"

rbac:
  create: true
  readSecrets: false

serviceAccount:
  create: false
  name: jenkins
